// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @unique @default(cuid())
  email    String  @unique
  username String  @unique
  name     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // üê® once you've made the Image model, add an optional image property here

  notes Note[]
}

model Note {
  id      String @id @unique @default(cuid())
  title   String
  content String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner   User   @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ownerId String

  // üê® once you've made the Image model, add an images property that's an
  // array of Image models
}

// üê® add the File model here. It should have the following properties
// - id: similar to the other id properties we have so far
// - contentType: a required string
// - blob: a Bytes type
// - createdAt: just like the others we have already
// - updatedAt: just like the others we have already
// - image: an Image model with the @relationship attribute
// - imageId: String with the @unique attribute establishing the one-to-one relationship

// üê® add the Image model here. It should have the following properties
// - id: similar to the other id properties we have so far
// - altText: an optional string
// - createdAt: just like the others we have already
// - updatedAt: just like the others we have already
// - note: an optional note with a relationship attribute
// - noteId: an optional string
// - user: an optional user with a relationship attribute
// - userId: an optional string with the @unique attribute establishing the one-to-one relationship
// - file: an optional File (üí∞ no relationship attribute here)
